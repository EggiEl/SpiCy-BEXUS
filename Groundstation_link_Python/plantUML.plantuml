@startuml

package "Groundstation (Laptop/Python)" {
class TCP_SERVER {
    - packets: list
    - rawdata: list
    - ipadress: string
    - port: int
    - isRunning: int
    - struct_format: string
    + StartServer()
    + ConnectClient()
}

class DATALOGGER {
    - rawdata: string
    - formateddata: string
    + header()
    + write_packet(packet)
    + savepackets(TCP_server)
    + write_rawdata(rawdata)
    + saveraw(TCP_server)
}
}

package "Microcontroller(Rp2040/C)" {
class SD {
    - SD_init: uint8_t
    - CS_SD: int
    - MISO_SD: int
    - MOSI_SD: int
    - SCK_SD: int
    + max_freq_sd()
    + init_SD()
    + sd_numpackets(filepath)
    + writestruct(s_out, filepath)
    + readstruct(data, filepath, position)
}

class Ethernet{
    - client: EthernetClient
    - TCP_init: uint8_t
    + setup_TCP_Client()
    + send_TCP(data: char*, size: unsigned long int)
    + recieve_TCP()
    + send_TCP_packet(data: packet)
}

node struct {
class packet {
    - id: ulong
    - timestampPacket: ulong
    - timestampOxy: ulong[6]
    - oxigen: float[6]
    - tempTube: float[6]
    - heaterPWM: int[6]
    - error: int
    - tempCpu: float
    - power: int[2]
    - info: char[80]
    + packet_create(): packet
    + packet_writeinfo(data: packet, info: char*)
}
}
}

packet --> Ethernet : is given to
packet --> SD: saves
Ethernet --> TCP_SERVER : sends
TCP_SERVER --> DATALOGGER : gives packet_list

@enduml